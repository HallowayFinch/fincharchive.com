name: Artifact Hasher & Metadata Updater

on:
  push:
    paths:
      - "artifacts/**"

permissions:
  contents: write

jobs:
  hash:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq and ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y jq ffmpeg

      - name: List changed artifact files (ignore metadata & sums)
        id: files
        shell: bash
        run: |
          set -euo pipefail
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          # List changed files under artifacts/**
          git diff --name-only "$BEFORE" "$AFTER" -- 'artifacts/**' > all.txt || true
          # Ignore these two
          grep -vE '/(metadata\.json|SHA256SUMS\.txt)$' all.txt || true > changed.txt
          COUNT=$(wc -l < changed.txt | tr -d ' ')
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
          echo "Changed files:"
          cat changed.txt || true

      - name: Compute hashes & update metadata
        if: steps.files.outputs.count != '0'
        shell: bash
        run: |
          set -euo pipefail
          while IFS= read -r f; do
            [ -n "${f:-}" ] && [ -f "$f" ] || continue
            echo "Processing $f"

            HASH=$(sha256sum "$f" | awk '{print $1}')
            DIR=$(dirname "$f")
            BASE=$(basename "$f")
            MIME=$(file --mime-type -b "$f" || echo application/octet-stream)

            DUR="0.000"
            if [[ "$MIME" == audio/* || "$MIME" == video/* ]]; then
              DUR=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$f" | awk '{printf "%.3f",$1}')
              DUR=${DUR:-0.000}
            fi

            # Update SHA256SUMS.txt (idempotent)
            SUMS="$DIR/SHA256SUMS.txt"
            (grep -v "  $f\$" "$SUMS" 2>/dev/null || true; printf "%s  %s\n" "$HASH" "$f") | sort -u > "$SUMS.tmp"
            mv "$SUMS.tmp" "$SUMS"

            # Build LOG_ID from folder name: log-1022a -> 1022A
            LOGDIR=$(basename "$DIR"); RAW="${LOGDIR#log-}"; LOGID=$(echo "$RAW" | tr '[:lower:]' '[:upper:]')
            META="$DIR/metadata.json"

            if [ ! -f "$META" ]; then
              # Create minimal metadata (jq-only, no heredocs)
              jq -n \
                --arg logid "$LOGID" \
                --arg mime "$MIME" \
                --arg file "$BASE" \
                --arg algo "SHA256" \
                --arg hash "$HASH" \
                --arg dir "$DIR" \
                --argjson dur "$DUR" \
                '{
                  log_id: $logid,
                  title: "",
                  date_published: "",
                  artifact_type: $mime,
                  file: $file,
                  duration_seconds: $dur,
                  reverse_playback: false,
                  notable_timestamp: "",
                  description: "",
                  checksum: { algorithm: $algo, value: $hash },
                  provenance: {},
                  license: "See repository LICENSE",
                  canonical_url: ("https://fincharchive.com/" + $dir + "/metadata.json")
                }' > "$META"
            else
              # Update core fields; preserve your custom ones (e.g., HiddenPhrase)
              jq \
                --arg file "$BASE" \
                --arg algo "SHA256" \
                --arg hash "$HASH" \
                --arg type "$MIME" \
                --argjson dur "$DUR" \
                '
                  .file = $file
                  | .artifact_type = $type
                  | .duration_seconds = $dur
                  | .checksum = ({algorithm: $algo, value: $hash})
                ' "$META" > "$META.tmp" && mv "$META.tmp" "$META"
            fi

            git add "$SUMS" "$META"
          done < changed.txt

      - name: Commit and push
        if: steps.files.outputs.count != '0'
        run: |
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit -m "ci(artifact): update checksums and metadata"
          git push
