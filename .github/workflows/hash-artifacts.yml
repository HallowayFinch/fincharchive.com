name: Artifact Hasher & Metadata Updater

on:
  push:
    paths:
      - "artifacts/**"
    paths-ignore:
      - "artifacts/**/metadata.json"
      - "artifacts/**/SHA256SUMS.txt"

permissions:
  contents: write

jobs:
  hash:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq and ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y jq ffmpeg

      - name: List changed artifact files
        id: files
        shell: bash
        run: |
          set -euo pipefail
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          git diff --name-only "$BEFORE" "$AFTER" -- 'artifacts/**' \
            | grep -vE '/(metadata\.json|SHA256SUMS\.txt)$' || true > changed.txt
          echo "Changed files:"
          cat changed.txt || true
          echo "count=$(wc -l < changed.txt 2>/dev/null | tr -d ' ')" >> "$GITHUB_OUTPUT"

      - name: Compute hashes & update metadata
        if: steps.files.outputs.count != '0'
        shell: bash
        run: |
          set -euo pipefail
          while IFS= read -r f; do
            [ -n "${f:-}" ] && [ -f "$f" ] || continue
            echo "Processing $f"

            HASH=$(sha256sum "$f" | awk '{print $1}')
            DIR=$(dirname "$f")
            BASE=$(basename "$f")
            MIME=$(file --mime-type -b "$f" || echo application/octet-stream)

            DUR="0.000"
            if [[ "$MIME" == audio/* || "$MIME" == video/* ]]; then
              DUR=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$f" | awk '{printf "%.3f",$1}')
              DUR=${DUR:-0.000}
            fi

            # Update SHA256SUMS.txt (idempotent)
            SUMS="$DIR/SHA256SUMS.txt"
            (grep -v "  $f\$" "$SUMS" 2>/dev/null || true; printf "%s  %s\n" "$HASH" "$f") | sort -u > "$SUMS.tmp"
            mv "$SUMS.tmp" "$SUMS"

            # Derive LOG_ID like 1022A from folder name log-1022a
            LOGDIR=$(basename "$DIR")
            RAW="${LOGDIR#log-}"
            LOGID=$(echo "$RAW" | tr '[:lower:]' '[:upper:]')
            META="$DIR/metadata.json"

            if [ ! -f "$META" ]; then
              # Write minimal JSON via quoted heredoc (no YAML parsing issues)
              cat > "$META" <<'JSON'
{
  "log_id": "__LOGID__",
  "title": "",
  "date_published": "",
  "artifact_type": "__MIME__",
  "file": "__FILE__",
  "duration_seconds": __DUR__,
  "reverse_playback": false,
  "notable_timestamp": "",
  "description": "",
  "checksum": { "algorithm": "SHA256", "value": "__HASH__" },
  "provenance": {},
  "license": "See repository LICENSE",
  "canonical_url": "https://fincharchive.com/__DIR__/metadata.json"
}
JSON
              sed -i "s|__LOGID__|$LOGID|g; s|__MIME__|$MIME|g; s|__FILE__|$BASE|g; s|__DUR__|$DUR|g; s|__HASH__|$HASH|g; s|__DIR__|$DIR|g" "$META"
            else
              # Update existing metadata while preserving your custom fields
              jq --arg file "$BASE" --arg algo "SHA256" --arg hash "$HASH" --arg type "$MIME" --argjson dur "$DUR" \
                 '.file=$file | .artifact_type=$type | .duration_seconds=$dur | .checksum=({algorithm:$algo, value:$hash})' \
                 "$META" > "$META.tmp" && mv "$META.tmp" "$META"
            fi

            git add "$SUMS" "$META"
          done < changed.txt

      - name: Commit and push
        if: steps.files.outputs.count != '0'
        run: |
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit -m "ci(artifact): update checksums and metadata"
          git push
