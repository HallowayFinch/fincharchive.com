name: Artifact Hasher & Metadata Updater

on:
  push:
    paths:
      - "artifacts/**"
      - "!artifacts/**/metadata.json"
      - "!artifacts/**/SHA256SUMS.txt"

permissions:
  contents: write

jobs:
  hash:
    # Prevent infinite loops if the bot commits
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools (jq + ffmpeg for durations)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq ffmpeg

      - name: Compute hashes and update metadata
        shell: bash
        run: |
          set -euo pipefail

          # Which artifact files changed in this push?
          CHANGED="$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}" -- 'artifacts/**' ':!**/metadata.json' ':!**/SHA256SUMS.txt' || true)"
          if [ -z "$CHANGED" ]; then
            echo "No artifact files changed."
            exit 0
          fi

          updated_files=0

          while IFS= read -r f; do
            [ -z "$f" ] && continue
            [ -f "$f" ] || continue

            echo "Processing: $f"
            HASH="$(sha256sum "$f" | awk '{print $1}')"
            DIR="$(dirname "$f")"
            BASENAME="$(basename "$f")"

            # MIME type (best-effort)
            MIMETYPE="$(file --mime-type -b "$f" || echo application/octet-stream)"

            # Duration (audio/video) with 3 decimals; else 0.000
            DURATION="0.000"
            if [[ "$MIMETYPE" == audio/* || "$MIMETYPE" == video/* ]]; then
              DURATION="$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$f" | awk '{printf "%.3f",$1}')"
              DURATION="${DURATION:-0.000}"
            fi

            # Update SHA256SUMS.txt (idempotent)
            SUMS="$DIR/SHA256SUMS.txt"
            touch "$SUMS"
            if grep -qE "  $f$" "$SUMS"; then
              awk -v path="$f" -v hash="$HASH" 'BEGIN{OFS="  "} $2==path{$1=hash} $2!=path{print} END{print hash, path > "/dev/stderr"}' "$SUMS" \
                2> >(tail -1 >/dev/null) | sort -u > "$SUMS.tmp"
              mv "$SUMS.tmp" "$SUMS"
            else
              printf "%s  %s\n" "$HASH" "$f" >> "$SUMS"
            fi

            # Derive log id from folder name e.g., artifacts/log-1022a
            LOGDIR="$(basename "$DIR")"         # log-1022a
            RAW_ID="${LOGDIR#log-}"             # 1022a
            LOG_ID="$(echo "$RAW_ID" | tr '[:lower:]' '[:upper:]')"  # 1022A

            META="$DIR/metadata.json"
            if [ ! -f "$META" ]; then
              # Create a minimal metadata if missing (you can edit title/notes later)
              cat > "$META" <<JSON
{
  "log_id": "$LOG_ID",
  "title": "",
  "date_published": "",
  "artifact_type": "$MIMETYPE",
  "file": "$BASENAME",
  "duration_seconds": $DURATION,
  "reverse_playback": false,
  "notable_timestamp": "",
  "description": "",
  "checksum": { "algorithm": "SHA256", "value": "$HASH" },
  "provenance": {},
  "license": "See repository LICENSE",
  "canonical_url": "https://fincharchive.com/$DIR/metadata.json"
}
JSON
            else
              # Update existing metadata while preserving other fields
              tmp="$META.tmp"
              jq \
                --arg file "$BASENAME" \
                --arg algo "SHA256" \
                --arg hash "$HASH" \
                --arg type "$MIMETYPE" \
                --argjson dur "$DURATION" \
                '
                  .file = $file
                | .artifact_type = $type
                | .duration_seconds = $dur
                | .checksum = (.checksum // {})
                | .checksum.algorithm = $algo
                | .checksum.value = $hash
                ' "$META" > "$tmp"
              mv "$tmp" "$META"
            fi

            git add "$SUMS" "$META"
            updated_files=$((updated_files+1))
          done <<< "$CHANGED"

          if [ "$updated_files" -eq 0 ]; then
            echo "Nothing to commit."
            exit 0
          fi

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "ci(artifact): update SHA256 and metadata for changed artifacts [skip ci]" || true
          git push